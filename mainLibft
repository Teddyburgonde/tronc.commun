ft_isalpha ft_isdigit ft_asalnum ft_isascii ft_isprint 
int	main(int argc, char **argv)
{
	int	i;

	i = 0;
	if (argc == 2)
	{
		while (argv[1][i])
		{
			if ((argv[1][i]))
				write (1, "ok\n", 3);
			else
				write (1, "NO\n",3);
			i++;
		}
	}
}

ft_strlen 

#include <stdio.h>
int	main(void)
{
	char	tab[] = "salut";
	printf("%d", ft_strlen(tab));
}



ft_memset 

#include <stdio.h>
//#include <string.h>

int	main(int argc, char **argv)
{
	unsigned int	n;
	char	letter;

	letter = 'Z';
	n = 3;

	if (argc == 2)
	{
		ft_memset(argv[1], letter, n);
		printf("%s", argv[1]);
	}
	//memset(argv[1], letter, 3);
	//printf("%s", argv[1]);
}

ft_bzero 

#include <string.h>
#include <stdio.h>
int	main(void)
{
	char	tab[] = "salut";
	//ft_bzero(tab, 3);
	//printf("%s\n", tab);
	bzero(tab, 3);
	printf("%s", tab);
}

ft_memcpy
#include <stdio.h>
int	main(int argc, char **argv)
{
	if (argc == 3)
	{
		ft_memcpy(argv[1], argv[2], 3);
		printf("%s", argv[1]);
	}
}

ft_memmove

#include <string.h>
#include <stdio.h>
int	main(int argc, char **argv)
{
	if (argc == 3)
	{
		memmove(argv[1], argv[2], 3);
		printf("%s", argv[1]);
	}
}

ft_strlcpy
// cette fonction copie src dans dest mais en vérifiant qu'on ne dépasse pas la capacité que dest peut recevoir
// elle retourne la taille de src;

#include <stdio.h>
int	main(int argc, char **argv)
{
	if (argc == 3)
	{
		printf("%ld", ft_strlcpy(argv[1], argv[2], 3));
	}
}

ft_strlcat

#include <stdio.h>

int	main(int argc, char **argv)
{
	if (argc == 3)
	{
		printf("%ld", ft_strlcat(argv[1], argv[2], 3));
	}
}

ft_toupper 

#include <stdio.h>
int	main(void)
{
	int	a;

	a = 'b';
	printf("%c", ft_toupper(a));
}

ft_tolower 


#include <stdio.h>
int	main(void)
{
	int	a;

	a = 'a';
	printf("%c", ft_tolower(a));
}





